---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { requireAuth } from '../../middleware/auth';
import Database from 'better-sqlite3';
import { join } from 'path';

// 验证管理员身份
const authResponse = await requireAuth(Astro);
if (authResponse) return authResponse;

const db = new Database(join(process.cwd(), 'data/blog.db'));

// 获取所有表名
const tables = db.prepare(`
  SELECT name FROM sqlite_master 
  WHERE type='table' 
  ORDER BY name
`).all();

// 获取选定表的数据
const selectedTable = Astro.url.searchParams.get('table');
let tableData = null;
let columns = [];
let error = null;

if (selectedTable) {
  try {
    // 获取表结构
    const tableInfo = db.prepare(`PRAGMA table_info(${selectedTable})`).all();
    columns = tableInfo.map(col => ({
      name: col.name,
      type: col.type,
      nullable: !col.notnull,
      isPrimary: !!col.pk
    }));

    // 获取表数据
    tableData = db.prepare(`SELECT * FROM ${selectedTable} LIMIT 100`).all();
  } catch (e) {
    error = e.message;
  }
}

// 关闭数据库连接
db.close();
---

<BaseLayout title="数据库管理">
  <div class="container mx-auto px-4 py-8">
    <div class="mb-6">
      <a
        href="/admin/settings"
        class="inline-flex items-center gap-2 text-gray-600 dark:text-gray-400 hover:text-blue-500"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        返回设置
      </a>
    </div>

    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
      <h1 class="text-2xl font-bold mb-6">数据库管理</h1>

      <!-- 表选择器 -->
      <div class="mb-8">
        <label class="block text-sm font-medium mb-2">选择表</label>
        <div class="flex gap-4 flex-wrap">
          {tables.map(({ name }) => (
            <a
              href={`/admin/database?table=${name}`}
              class={`px-4 py-2 rounded-lg transition-colors ${
                selectedTable === name
                  ? 'bg-blue-500 text-white'
                  : 'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'
              }`}
            >
              {name}
            </a>
          ))}
        </div>
      </div>

      {error && (
        <div class="mb-8 p-4 bg-red-100 dark:bg-red-900/50 text-red-800 dark:text-red-200 rounded-lg">
          {error}
        </div>
      )}

      {selectedTable && !error && (
        <div>
          <!-- 表结构 -->
          <div class="mb-8">
            <h2 class="text-xl font-bold mb-4">表结构</h2>
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                <thead class="bg-gray-50 dark:bg-gray-700">
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                      字段名
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                      类型
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                      可空
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                      主键
                    </th>
                  </tr>
                </thead>
                <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                  {columns.map(col => (
                    <tr>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        {col.name}
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                        {col.type}
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                        {col.nullable ? '是' : '否'}
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                        {col.isPrimary ? '是' : '否'}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>

          <!-- 表数据 -->
          <div>
            <h2 class="text-xl font-bold mb-4">表数据 (最多显示100条)</h2>
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                <thead class="bg-gray-50 dark:bg-gray-700">
                  <tr>
                    {columns.map(col => (
                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                        {col.name}
                      </th>
                    ))}
                  </tr>
                </thead>
                <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                  {tableData.map(row => (
                    <tr>
                      {columns.map(col => (
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                          {row[col.name]?.toString() || 'null'}
                        </td>
                      ))}
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      )}
    </div>
  </div>
</BaseLayout> 