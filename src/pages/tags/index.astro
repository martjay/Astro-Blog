---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const posts = await getCollection('blog');
const tags = [...new Set(posts.flatMap(post => post.data.tags))];
const tagCounts = tags.reduce((acc, tag) => {
  acc[tag] = posts.filter(post => post.data.tags.includes(tag)).length;
  return acc;
}, {} as Record<string, number>);

// 按文章数量排序标签
const sortedTags = tags.sort((a, b) => tagCounts[b] - tagCounts[a]);
---

<BaseLayout title="标签列表">
  <!-- Hero Section -->
  <section class="relative overflow-hidden bg-gradient-to-br from-blue-600 to-purple-700 dark:from-blue-900 dark:to-purple-900">
    <div class="absolute inset-0">
      <div class="absolute inset-0 bg-gradient-to-br from-blue-600/90 to-purple-700/90 dark:from-blue-900/90 dark:to-purple-900/90"></div>
      <div class="absolute inset-0 bg-grid-white/[0.05] bg-grid-12"></div>
    </div>
    <div class="container relative mx-auto px-4 py-16">
      <div class="max-w-3xl mx-auto text-center">
        <h1 class="text-4xl md:text-5xl font-bold text-white mb-6 animate-fade-in">标签云</h1>
        <p class="text-xl text-white/80 mb-8 animate-fade-in animation-delay-200">
          探索不同主题的文章集合
        </p>
      </div>
    </div>
  </section>

  <!-- Tags Section -->
  <section class="py-16 bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="flex flex-wrap justify-center gap-4 animate-fade-in animation-delay-300">
          {sortedTags.map(tag => {
            const count = tagCounts[tag];
            const size = count > 10 ? 'lg' : count > 5 ? 'md' : 'sm';
            return (
              <a
                href={`/tags/${tag}`}
                class={`
                  px-6 py-3 rounded-full backdrop-blur-sm
                  bg-gradient-to-r hover:scale-105 transform transition-all duration-300
                  ${size === 'lg' ? 'from-blue-500 to-purple-600 text-white text-lg font-bold' :
                    size === 'md' ? 'from-blue-400/80 to-purple-500/80 text-white' :
                    'from-blue-400/20 to-purple-500/20 dark:from-blue-400/10 dark:to-purple-500/10'}
                `}
              >
                <span class="flex items-center gap-2">
                  #{tag}
                  <span class={`
                    px-2 py-0.5 rounded-full text-sm
                    ${size === 'lg' ? 'bg-white/20' :
                      size === 'md' ? 'bg-white/15' :
                      'bg-gray-500/20 dark:bg-white/10'}
                  `}>
                    {count}
                  </span>
                </span>
              </a>
            );
          })}
        </div>
      </div>
    </div>
  </section>

  <!-- Tag Stats -->
  <section class="py-16">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-2xl font-bold gradient-text mb-8 text-center">标签统计</h2>
        <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {sortedTags.slice(0, 6).map(tag => (
            <div class="p-6 rounded-2xl bg-gradient-to-br from-blue-500/5 to-purple-500/5 backdrop-blur-sm border border-gray-200 dark:border-gray-800">
              <h3 class="text-xl font-bold mb-2 gradient-text">#{tag}</h3>
              <div class="flex justify-between items-center">
                <span class="text-gray-600 dark:text-gray-400">文章数量</span>
                <span class="text-2xl font-bold gradient-text">{tagCounts[tag]}</span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  /* 网格背景 */
  .bg-grid-white {
    mask-image: linear-gradient(to bottom, transparent, black, transparent);
  }
  .bg-grid-12 {
    background-image: 
      linear-gradient(to right, rgb(255 255 255 / 0.05) 1px, transparent 1px),
      linear-gradient(to bottom, rgb(255 255 255 / 0.05) 1px, transparent 1px);
    background-size: 24px 24px;
  }

  /* 动画 */
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out forwards;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-300 {
    animation-delay: 0.3s;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* 渐变文本 */
  .gradient-text {
    @apply bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-600;
  }

  /* 响应式调整 */
  @media (max-width: 768px) {
    .container {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }
</style> 