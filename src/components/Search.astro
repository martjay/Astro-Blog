<div class="relative" x-data="{ open: false, search: '' }">
  <button
    @click="open = !open"
    class="p-2 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-5 w-5"
      viewBox="0 0 20 20"
      fill="currentColor"
    >
      <path
        fill-rule="evenodd"
        d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
        clip-rule="evenodd"
      />
    </svg>
  </button>

  <div
    x-show="open"
    @click.away="open = false"
    class="absolute right-0 mt-2 w-72 bg-white dark:bg-gray-800 rounded-lg shadow-lg"
  >
    <input
      type="text"
      x-model="search"
      placeholder="搜索文章..."
      class="w-full p-3 border-b dark:border-gray-700 bg-transparent focus:outline-none"
    />
    
    <div class="max-h-96 overflow-y-auto" x-data="searchResults">
      <template x-for="result in filterPosts(search)" :key="result.slug">
        <a
          :href="'/blog/' + result.slug"
          class="block p-3 hover:bg-gray-100 dark:hover:bg-gray-700"
        >
          <h3 x-text="result.title" class="font-medium"></h3>
          <p x-text="result.description" class="text-sm text-gray-600 dark:text-gray-400"></p>
        </a>
      </template>
    </div>
  </div>
</div>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('searchResults', () => ({
      posts: [],
      async init() {
        const response = await fetch('/search-index.json');
        this.posts = await response.json();
      },
      filterPosts(query) {
        if (!query) return [];
        const searchTerm = query.toLowerCase();
        return this.posts.filter(post => 
          post.title.toLowerCase().includes(searchTerm) ||
          post.description.toLowerCase().includes(searchTerm)
        ).slice(0, 5);
      }
    }));
  });
</script> 